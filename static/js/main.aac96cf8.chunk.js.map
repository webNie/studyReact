{"version":3,"sources":["react路由作业/11-13作业大的登录注册页/component/home.jsx","react路由作业/11-13作业大的登录注册页/component/login/register.jsx","react路由作业/11-13作业大的登录注册页/component/login/signin.jsx","react路由作业/11-13作业大的登录注册页/component/login/login.jsx","react路由作业/11-13作业大的登录注册页/component/content.jsx","react路由作业/11-13作业大的登录注册页/index.jsx","serviceWorker.js","index.js"],"names":["home","className","src","alt","to","Component","Register","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","data","JSON","stringify","window","sessionStorage","setItem","history","replace","getFieldDecorator","this","onSubmit","Item","rules","required","message","prefix","type","style","color","placeholder","htmlType","WrappedNormalLoginForm","Form","create","name","Signin","Info","parse","getItem","username","password","alert","index","state","current","handleClick","setState","location","pathname","substring","onClick","selectedKeys","mode","key","path","exact","component","content","from","Home","Login","Content","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aac96cf8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default class home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <img\r\n          src=\"http://www.lofter.com/mobile/src/images/wap2/login/lofter@2x.png\"\r\n          alt=\"logo\"\r\n          className=\"img\"\r\n        />\r\n        <div className=\"home-login download\">注册/登录</div>\r\n        <div className=\"home-login\">\r\n          <NavLink to=\"/login\">登录/注册</NavLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\n\r\nclass Register extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n        const data = JSON.stringify(values);\r\n        window.sessionStorage.setItem(\"user\", data);\r\n        const { history } = this.props;\r\n        history.replace(\"/login/signin\", values);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n          <Form.Item>\r\n            {getFieldDecorator(\"username\", {\r\n              rules: [\r\n                { required: true, message: \"对不起，您输入的用户名不正确\" }\r\n              ]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                placeholder=\"请输入用户名\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"password\", {\r\n              rules: [{ required: true, message: \"对不起，您输入的密码不正确\" }]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                type=\"password\"\r\n                placeholder=\"请输入密码\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"password2\", {\r\n              rules: [{ required: true, message: \"对不起，您输入的密码不正确\" }]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                type=\"password\"\r\n                placeholder=\"请再次输入密码\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              注册\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: \"normal_login\" })(Register);\r\n\r\nexport default WrappedNormalLoginForm;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\n\r\nclass Signin extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n        const { history } = this.props;\r\n        const Info = JSON.parse(window.sessionStorage.getItem(\"user\"));\r\n        if (\r\n          values.username == Info.username &&\r\n          values.password == Info.password\r\n        ) {\r\n          history.replace(\"/content\", values);\r\n        } else {\r\n          alert(\"对不起没有该用户\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <div className=\"signin\">\r\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n          <Form.Item>\r\n            {getFieldDecorator(\"username\", {\r\n              rules: [\r\n                { required: true, message: \"对不起，您输入的用户名不正确\" }\r\n              ]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                placeholder=\"请输入用户名\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator(\"password\", {\r\n              rules: [{ required: true, message: \"对不起，您输入的密码不正确\" }]\r\n            })(\r\n              <Input\r\n                prefix={\r\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                }\r\n                type=\"password\"\r\n                placeholder=\"请输入密码\"\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              登录\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: \"normal_login\" })(Signin);\r\n\r\nexport default WrappedNormalLoginForm;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\nimport { Menu } from \"antd\";\r\nimport Register from \"./register\";\r\nimport Signin from \"./signin\";\r\n\r\nexport default class index extends Component {\r\n  state = {\r\n    current: \"signin\"\r\n  };\r\n\r\n  handleClick = e => {\r\n    this.setState({\r\n      current: window.location.pathname.substring(1)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img\r\n          src=\"http://www.lofter.com/mobile/src/images/wap2/login/lofter@2x.png\"\r\n          alt=\"logo\"\r\n          className=\"img\"\r\n        />\r\n        <nav className=\"nav\">\r\n          <Menu\r\n            onClick={this.handleClick}\r\n            selectedKeys={[this.state.current]}\r\n            mode=\"horizontal\"\r\n          >\r\n            <Menu.Item key=\"register\">\r\n              <NavLink to=\"/login/register\" className=\"register-a\">\r\n                注册\r\n              </NavLink>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"signin\">\r\n              <NavLink to=\"/login/signin\" className=\"signin-a\">\r\n                登录\r\n              </NavLink>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </nav>\r\n        <main>\r\n          <Route path=\"/login\" exact component={Signin} />\r\n          <Route path=\"/login/register\" component={Register} />\r\n          <Route path=\"/login/signin\" component={Signin} />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class content extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>欢迎光临！</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect, BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport Home from \"./component/home\";\r\nimport Login from \"./component/login/login\";\r\nimport Content from \"./component/content\";\r\n\r\nexport default class index extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Redirect from=\"/\" to=\"/home\" />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/content\" component={Content} />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './react路由作业/11-13作业大的登录注册页/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}